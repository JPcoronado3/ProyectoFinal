package PatronObservador;

import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author user
 */
public class Notas {

    private List<Observador> observadores = new ArrayList<>();
    private double corte1 = 0.0;
    private double corte2 = 0.0;
    private double corte3 = 0.0;

    
    // Método para registrar observadores
    public void registrarObservador(Observador observador) {
        observadores.add(observador);
    }

    // Método para remover observadores
    public void removerObservador(Observador observador) {
        observadores.remove(observador);
    }

    // Método para notificar a todos los observadores
    public void notificarObservadores(String mensaje) {
        for (Observador observador : observadores) {
            observador.actualizar(mensaje);
        }
    }

    // Métodos para actualizar notas
    public void actualizarCorte1(double nota) {
        this.corte1 = nota;
        notificarObservadores("La nota del Corte 1 ha sido actualizada a: " + corte1);
    }

    public void actualizarCorte2(double nota) {
        this.corte2 = nota;
        notificarObservadores("La nota del Corte 2 ha sido actualizada a: " + corte2);
    }

    public void actualizarCorte3(double nota) {
        this.corte3 = nota;
        notificarObservadores("La nota del Corte 3 ha sido actualizada a: " + corte3);
    }

    // Obtener promedio final
    public double obtenerPromedioFinal() {
        return (corte1 * 0.3) + (corte2 * 0.3) + (corte3 * 0.4);
    }
}
